{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA,4CAA4C,mBAAO,CAAC,mHAAuD;AAC3G,kCAAkC,mBAAO,CAAC,qGAAgD;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;;AAE5C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C;AAC3C;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA,8BAA8B;AAC9B,+CAA+C;AAC/C;;;AAGA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iDAAiD;AACjD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,CAAC,OAAO,gFAAgF,UAAU,UAAU,YAAY,aAAa,OAAO,KAAK,YAAY,WAAW,UAAU,YAAY,aAAa,OAAO,KAAK,UAAU,YAAY,aAAa,aAAa,WAAW,YAAY,WAAW,MAAM,KAAK,YAAY,WAAW,YAAY,aAAa,WAAW,YAAY,OAAO,KAAK,UAAU,YAAY,aAAa,WAAW,UAAU,aAAa,OAAO,KAAK,UAAU,YAAY,OAAO,KAAK,UAAU,YAAY,OAAO,KAAK,YAAY,aAAa,MAAM,MAAM,UAAU,UAAU,YAAY,OAAO,KAAK,UAAU,UAAU,YAAY,aAAa,WAAW,YAAY,WAAW,YAAY,aAAa,aAAa,aAAa,yBAAyB,WAAW,YAAY,aAAa,OAAO,oBAAoB,QAAQ,KAAK,YAAY,aAAa,eAAe,MAAM,MAAM,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU,UAAU,MAAM,KAAK,UAAU,UAAU,MAAM,KAAK,UAAU,UAAU,MAAM,KAAK,UAAU,UAAU,MAAM,KAAK,UAAU,UAAU,MAAM,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,wBAAwB,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU,UAAU,YAAY,uBAAuB,WAAW,YAAY,aAAa,WAAW,UAAU,aAAa,OAAO,KAAK,UAAU,YAAY,OAAO,KAAK,UAAU,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU,OAAO,YAAY,MAAM,YAAY,WAAW,YAAY,WAAW,YAAY,OAAO,OAAO,aAAa,OAAO,YAAY,MAAM,UAAU,YAAY,aAAa,OAAO,OAAO,WAAW,MAAM,MAAM,UAAU,YAAY,OAAO,KAAK,UAAU,MAAM,KAAK,UAAU,YAAY,aAAa,6BAA6B,cAAc,eAAe,2BAA2B,qBAAqB,GAAG,UAAU,sCAAsC,iBAAiB,kBAAkB,2BAA2B,wBAAwB,GAAG,WAAW,kBAAkB,uCAAuC,0CAA0C,0BAA0B,cAAc,qBAAqB,kBAAkB,GAAG,qBAAqB,kCAAkC,oBAAoB,uBAAuB,mDAAmD,oBAAoB,uDAAuD,GAAG,oCAAoC,kBAAkB,wCAAwC,2CAA2C,mBAAmB,kBAAkB,8CAA8C,OAAO,oBAAoB,oBAAoB,uBAAuB,GAAG,qBAAqB,oBAAoB,uBAAuB,GAAG,UAAU,0CAA0C,6CAA6C,qBAAqB,kBAAkB,iBAAiB,gBAAgB,8BAA8B,GAAG,uBAAuB,gBAAgB,kBAAkB,0CAA0C,sBAAsB,mBAAmB,wBAAwB,kBAAkB,2BAA2B,wBAAwB,wBAAwB,0BAA0B,uBAAuB,+CAA+C,uBAAuB,uBAAuB,GAAG,0BAA0B,gBAAgB,iBAAiB,4BAA4B,kBAAkB,2BAA2B,wBAAwB,gCAAgC,uBAAuB,qBAAqB,qBAAqB,kBAAkB,yCAAyC,gBAAgB,UAAU,eAAe,gCAAgC,mDAAmD,mCAAmC,uBAAuB,kBAAkB,KAAK,cAAc,kCAAkC,GAAG,iBAAiB,4BAA4B,GAAG,cAAc,iCAAiC,GAAG,gBAAgB,qCAAqC,GAAG,gBAAgB,8BAA8B,GAAG,cAAc,iBAAiB,iBAAiB,GAAG,iBAAiB,gBAAgB,iBAAiB,GAAG,cAAc,gBAAgB,iBAAiB,GAAG,gBAAgB,gBAAgB,iBAAiB,GAAG,gBAAgB,gBAAgB,iBAAiB,GAAG,UAAU,mCAAmC,GAAG,WAAW,2BAA2B,GAAG,oBAAoB,mDAAmD,mCAAmC,kBAAkB,4BAA4B,GAAG,oBAAoB,qCAAqC,GAAG,kDAAkD,iBAAiB,iBAAiB,qBAAqB,6BAA6B,2BAA2B,4BAA4B,uBAAuB,oBAAoB,oBAAoB,2CAA2C,KAAK,8BAA8B,oBAAoB,uBAAuB,GAAG,wBAAwB,oBAAoB,uBAAuB,GAAG,8DAA8D,sCAAsC,GAAG,oEAAoE,iBAAiB,GAAG,wDAAwD,uBAAuB,gBAAgB,uBAAuB,eAAe,iCAAiC,8EAA8E,0BAA0B,GAAG,6EAA6E,cAAc,wEAAwE,gFAAgF,eAAe,GAAG,sCAAsC,iBAAiB,8BAA8B,GAAG,sCAAsC,aAAa,GAAG,2BAA2B,eAAe,6BAA6B,mBAAmB,KAAK,mBAAmB;AACxmM;AACA;;;;;;;;;;;;AC9Pa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,gDAAgD;AAChD;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,sFAAsF,qBAAqB;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,iDAAiD,qBAAqB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,sDAAsD,qBAAqB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpFa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,cAAc;AACrE;AACA;AACA;AACA;AACA;;;;;;;;;;;ACfa;;AAEb;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACnFa;;AAEb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjCa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACTa;;AAEb;AACA;AACA,cAAc,KAAwC,GAAG,sBAAiB,GAAG,CAAI;AACjF;AACA;AACA;AACA;AACA;;;;;;;;;;;ACTa;;AAEb;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,yDAAyD;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC5Da;;AAEb;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACbwC;AACV;;AAEvB;AACP;AACA,yBAAyB,iDAAS;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,uCAAI;AACd,UAAU,uCAAI;AACd,UAAU,uCAAI;AACd,UAAU,uCAAI;AACd,UAAU,uCAAI;AACd;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,eAAe,QAAQ,UAAU;AAC5E;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;ACpD8B;;;AAG9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb;;;AAGA;;;AAGO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,SAAS,GAAG,SAAS;AAC5D;AACA;AACA,0BAA0B,uCAAI;AAC9B,0CAA0C;AAC1C;AACA,0BAA0B,uCAAI;AAC9B,6CAA6C;AAC7C;AACA,0BAA0B,uCAAI;AAC9B,0CAA0C;AAC1C;AACA,0BAA0B,uCAAI;AAC9B,4CAA4C;AAC5C;AACA,0BAA0B,uCAAI;AAC9B,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uCAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;;AAGO;AACP,gCAAgC;AAChC,0DAA0D;AAC1D,0DAA0D;AAC1D;AACA;AACA;AACA,0BAA0B,uCAAI;AAC9B,0CAA0C;AAC1C;AACA,0BAA0B,uCAAI;AAC9B,6CAA6C;AAC7C;AACA,0BAA0B,uCAAI;AAC9B,0CAA0C;AAC1C;AACA,0BAA0B,uCAAI;AAC9B,4CAA4C;AAC5C;AACA,0BAA0B,uCAAI;AAC9B,4CAA4C;AAC5C;AACA;AACA,KAAK;AACL,GAAG;AACH;;;AAGA;;AAEA;;;;;;;;;;;;;;;;;;;;;;AC9GkC;AACJ;AAC0B;AAEyB;;AAEjF;AACA,sBAAsB,uCAAI;AAC1B,yBAAyB,uCAAI;AAC7B,sBAAsB,uCAAI;AAC1B,wBAAwB,uCAAI;AAC5B,wBAAwB,uCAAI;AAC5B;AACA;;AAEA;AACA,sBAAsB,2CAAM;AAC5B,uBAAuB,2CAAM;AAC7B,UAAU;AACV;;AAEO;AACP,eAAe,uDAAW;AAC1B,mBAAmB,uDAAW;AAC9B,uBAAuB,uDAAW;AAClC,4BAA4B,uDAAW;AACvC,0BAA0B,uDAAW;AACrC,wBAAwB,uDAAW;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE,iEAAqB;AACvB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;AACD;;AAEA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI,iEAAqB;;AAEzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAqB;AAC3B;AACA;AACA;;AAEA;AACA,sBAAsB,uDAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kEAAsB;AAC5B;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,uDAAW;AAC5B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,yCAAI;AAClC,oCAAoC,+CAAU;AAC9C,oCAAoC,+CAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uCAAI;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,MAAM;AACN;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;;AAEvB;AACA,mCAAmC;AACnC;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,6DAA6D,EAAE,eAAe,EAAE;AAChF;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,wBAAwB,WAAW;AACnC,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,wDAAwD;AACxD,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;;AAEA;AACA,YAAY,kBAAkB,uBAAuB;AACrD,YAAY,eAAe,0BAA0B;AACrD,eAAe,oBAAoB,wBAAwB;AAC3D,eAAe,oBAAoB,wBAAwB;AAC3D,eAAe,wBAAwB,wBAAwB;;AAE/D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;;AAEvB;AACA,mCAAmC;AACnC;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,QAAQ;AACR;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;;AAEA,mDAAmD;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B,IAAI,eAAe,IAAI;AACrD;AACA;AACA,aAAa;;AAEb;;AAEA;AACA,WAAW;AACX,SAAS;AACT;;;AAGA;AACA;AACA;AACA,MAAM;;;;;AAKN;;;;;;;;;;;;;;;;;;;AC/0B8B;;AAEvB;AACP;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;;AAEA;AACA,oBAAoB,qBAAqB;AACzC;AACA,iDAAiD;AACjD,0EAA0E;AAC1E,UAAU;AACV,iDAAiD;AACjD,0EAA0E;AAC1E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,uCAAI;AAClC;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,uCAAI;AACnC;AACA;AACA;AACA,MAAM;AACN,+CAA+C;AAC/C;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA,SAAS;AACT,oDAAoD;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,QAAQ;AACR;AACA;;AAEA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,QAAQ;AACR;;AAEA;AACA;AACA,sBAAsB,UAAU;AAChC,wBAAwB,UAAU;AAClC;AACA,4BAA4B,uCAAI;AAChC;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC1LO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACnBiD;AACA;AACZ;;AAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHxC,gBAAgB,mBAAO,CAAC,oJAAwE;AAChG,mBAAmB,mBAAO,CAAC,0HAA2D;AACtF,qBAAqB,mBAAO,CAAC,oIAAgE;AAC7F,0BAA0B,mBAAO,CAAC,gKAA8E;AAChH,+BAA+B,mBAAO,CAAC,wIAAkE;AACzG,gCAAgC,mBAAO,CAAC,sIAAiE;AACzG,oBAAoB,mBAAO,CAAC,2KAAkF;AAC9G;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;;;;;;;UCvBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WClBA;;;;;;;;;;;;;;ACAqB;;AAEqB;AAC1C;;;AAGA,uDAAU;;;AAGV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA,wD","sources":["webpack://hashmap/./src/style.css","webpack://hashmap/./node_modules/css-loader/dist/runtime/api.js","webpack://hashmap/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://hashmap/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://hashmap/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://hashmap/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://hashmap/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://hashmap/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://hashmap/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://hashmap/./src/Player.js","webpack://hashmap/./src/cache-dom.js","webpack://hashmap/./src/controller.js","webpack://hashmap/./src/gameboard.js","webpack://hashmap/./src/ship.js","webpack://hashmap/./src/sounds.js","webpack://hashmap/./src/style.css?5aa5","webpack://hashmap/webpack/bootstrap","webpack://hashmap/webpack/runtime/define property getters","webpack://hashmap/webpack/runtime/global","webpack://hashmap/webpack/runtime/hasOwnProperty shorthand","webpack://hashmap/webpack/runtime/make namespace object","webpack://hashmap/webpack/runtime/publicPath","webpack://hashmap/webpack/runtime/nonce","webpack://hashmap/./src/index.js"],"sourcesContent":["// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  list-style: none;\n}\n\nbody {\n  background-color: rgb(36, 36, 36);\n  color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.main {\n  display: grid;\n  grid-template-rows: repeat(7, 1fr);\n  grid-template-columns: repeat(3, 1fr);\n  justify-items: center;\n  gap: 15px;\n  max-width: 360px;\n  height: 100vh;\n}\n\n.header-element {\n  color: rgba(255, 0, 0, 0.754);\n  grid-row: 1 / 2;\n  grid-column: 2 / 2;\n  font-family: 'Courier New', Courier, monospace;\n  font-size: 3rem;\n  text-shadow: 4px 3px 2px rgba(255, 255, 255, 0.45);\n}\n\n.player1-board, .computer-board{\n  display: grid;\n  grid-template-rows: repeat(10, 1fr);\n  grid-template-columns: repeat(10, 1fr);\n  width: 290px;  \n  height: 290px;\n  /* border: 1px, solid rgb(179, 177, 177); */\n\n}\n\n.player1-board {\n  grid-row: 2 / 2;\n  grid-column: 2 / 2;\n}\n\n.computer-board {\n  grid-row: 5 / 6;\n  grid-column: 2 / 2;\n}\n\n.box {\n  border: 1px, solid rgb(179, 177, 177);\n  /* outline:1px solid rgb(179, 177, 177); */\n  /* width: 100%;\n  height: 15px; */\n  width: 92%;\n  height: 92%;\n  background-color: #1E3F66;\n}\n\n.middle-container {\n  width: 100%;\n  height: 57px; \n  background-color: rgba(0, 0, 0, 0.55);\n  /* height: 100px; */\n  border: none;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  /* overflow: none;  */\n  position: relative; \n  line-height: 19px; /* Half container height */\n  grid-row: 3 / 3;\n  grid-column: 2 / 2;\n  align-self: center;\n}\n\n/* .middle-container {\n  width: auto;\n  height: 38px;\n  border: 1px solid white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  text-align: center;\n  overflow-y: auto;\n  line-height: 1.2;\n  height: 38px; \n  transition: opacity 0.5s ease-in-out;\n  opacity: 1; \n\n  \n} */\n\n\n.ship {\n  /* border: 1px solid white; */\n  /* box-shadow: 0 0 0 2px rgb(253, 253, 253); */\n  background-color: blueviolet;\n\n\n  /* width: 20px;\n  height: 20px; */\n}\n\n.carrier {\n  background-color: deepskyblue;\n}\n\n.battleship {\n background-color: orange;\n}\n\n.cruiser {\n  background-color: blueviolet;\n}\n\n.submarine {\n  background-color: cornflowerblue;\n}\n\n.destroyer {\n  background-color: fuchsia;\n}\n\n#carrier {\n  width: 100px;\n  height: 14px;\n}\n\n#battleship {\n  width: 80px;\n  height: 14px;\n}\n\n#cruiser {\n  width: 60px;\n  height: 14px;\n}\n\n#submarine {\n  width: 60px;\n  height: 14px;\n}\n\n#destroyer {\n  width: 40px;\n  height: 14px;\n}\n\n.hit {\n  background-color: rgb(0, 0, 0);\n}\n\n.miss {\n  background-color: gray;\n}\n\n.hover-preview {\n  background-color: hsla(288, 100%, 50%, 0.786); /* translucent violet overlay */\n}\n\n.valid-hover {\n  background-color: green;\n}\n\n.invalid-hover {\n  background-color: rgb(255, 0, 0);\n}\n\n.random-placement-button, .start-game-button {\n  width: 170px;\n  height: 30px;\n  padding: 3px 3px;\n  background-color: black; /* Blue */\n  color: white;\n  border: 1px solid white;\n  border-radius: 5px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n}\n\n.random-placement-button {\n  grid-row: 4 / 5;\n  grid-column: 2 / 2;\n}\n\n.start-game-button {\n  grid-row: 6 / 7;\n  grid-column: 2 / 2;\n}\n\n.random-placement-button:hover, .start-game-button:hover {\n  background-color: rgb(53, 52, 52);\n}\n\n.random-placement-button:disabled, .start-game-button:disabled {\n  opacity: 0.3;\n}\n\n\n/* Message element base styles */\n.text-updates {\n  position: absolute;\n  width: 100%;\n  text-align: center;\n  opacity: 0;\n  /* transform: translateY(0); */\n  transition: \n  opacity 0.5s ease-in-out,\n  transform 0.5s ease-in-out;\n  pointer-events: none; \n}\n\n/* Only animate the bottom message */\n.text-updates:nth-last-child(1) { \n  bottom: 0;\n  /* STARTS SLIGHTLY FROM THE BOTTOM */\n  transform: translateY(7px);\n  transition: \n    opacity 0.5s ease-in-out,\n    transform 0.5s ease-in-out;\n  color: red;\n}\n\n.text-updates:nth-last-child(2) { \n\n  top: 19px; \n  transform: translateY(0); \n}\n\n.text-updates:nth-last-child(3) { \n  top: 0;  \n}\n\n.text-updates.visible {\n  opacity: 1;\n  transform: translateY(0);\n  /* color: red; */\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;EACtB,gBAAgB;AAClB;;AAEA;EACE,iCAAiC;EACjC,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,kCAAkC;EAClC,qCAAqC;EACrC,qBAAqB;EACrB,SAAS;EACT,gBAAgB;EAChB,aAAa;AACf;;AAEA;EACE,6BAA6B;EAC7B,eAAe;EACf,kBAAkB;EAClB,8CAA8C;EAC9C,eAAe;EACf,kDAAkD;AACpD;;AAEA;EACE,aAAa;EACb,mCAAmC;EACnC,sCAAsC;EACtC,YAAY;EACZ,aAAa;EACb,2CAA2C;;AAE7C;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,qCAAqC;EACrC,0CAA0C;EAC1C;iBACe;EACf,UAAU;EACV,WAAW;EACX,yBAAyB;AAC3B;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,qCAAqC;EACrC,mBAAmB;EACnB,YAAY;EACZ,mBAAmB;EACnB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,qBAAqB;EACrB,kBAAkB;EAClB,iBAAiB,EAAE,0BAA0B;EAC7C,eAAe;EACf,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;;;;;;;;;;;;;;;;GAgBG;;;AAGH;EACE,6BAA6B;EAC7B,8CAA8C;EAC9C,4BAA4B;;;EAG5B;iBACe;AACjB;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;CACC,wBAAwB;AACzB;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;EACE,gCAAgC;AAClC;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,6CAA6C,EAAE,+BAA+B;AAChF;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,gCAAgC;AAClC;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,gBAAgB;EAChB,uBAAuB,EAAE,SAAS;EAClC,YAAY;EACZ,uBAAuB;EACvB,kBAAkB;EAClB,eAAe;EACf,eAAe;EACf,sCAAsC;;AAExC;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,YAAY;AACd;;;AAGA,gCAAgC;AAChC;EACE,kBAAkB;EAClB,WAAW;EACX,kBAAkB;EAClB,UAAU;EACV,8BAA8B;EAC9B;;4BAE0B;EAC1B,oBAAoB;AACtB;;AAEA,oCAAoC;AACpC;EACE,SAAS;EACT,oCAAoC;EACpC,0BAA0B;EAC1B;;8BAE4B;EAC5B,UAAU;AACZ;;AAEA;;EAEE,SAAS;EACT,wBAAwB;AAC1B;;AAEA;EACE,MAAM;AACR;;AAEA;EACE,UAAU;EACV,wBAAwB;EACxB,gBAAgB;AAClB\",\"sourcesContent\":[\"* {\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: border-box;\\n  list-style: none;\\n}\\n\\nbody {\\n  background-color: rgb(36, 36, 36);\\n  color: white;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n\\n.main {\\n  display: grid;\\n  grid-template-rows: repeat(7, 1fr);\\n  grid-template-columns: repeat(3, 1fr);\\n  justify-items: center;\\n  gap: 15px;\\n  max-width: 360px;\\n  height: 100vh;\\n}\\n\\n.header-element {\\n  color: rgba(255, 0, 0, 0.754);\\n  grid-row: 1 / 2;\\n  grid-column: 2 / 2;\\n  font-family: 'Courier New', Courier, monospace;\\n  font-size: 3rem;\\n  text-shadow: 4px 3px 2px rgba(255, 255, 255, 0.45);\\n}\\n\\n.player1-board, .computer-board{\\n  display: grid;\\n  grid-template-rows: repeat(10, 1fr);\\n  grid-template-columns: repeat(10, 1fr);\\n  width: 290px;  \\n  height: 290px;\\n  /* border: 1px, solid rgb(179, 177, 177); */\\n\\n}\\n\\n.player1-board {\\n  grid-row: 2 / 2;\\n  grid-column: 2 / 2;\\n}\\n\\n.computer-board {\\n  grid-row: 5 / 6;\\n  grid-column: 2 / 2;\\n}\\n\\n.box {\\n  border: 1px, solid rgb(179, 177, 177);\\n  /* outline:1px solid rgb(179, 177, 177); */\\n  /* width: 100%;\\n  height: 15px; */\\n  width: 92%;\\n  height: 92%;\\n  background-color: #1E3F66;\\n}\\n\\n.middle-container {\\n  width: 100%;\\n  height: 57px; \\n  background-color: rgba(0, 0, 0, 0.55);\\n  /* height: 100px; */\\n  border: none;\\n  border-radius: 10px;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  /* overflow: none;  */\\n  position: relative; \\n  line-height: 19px; /* Half container height */\\n  grid-row: 3 / 3;\\n  grid-column: 2 / 2;\\n  align-self: center;\\n}\\n\\n/* .middle-container {\\n  width: auto;\\n  height: 38px;\\n  border: 1px solid white;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: flex-start;\\n  text-align: center;\\n  overflow-y: auto;\\n  line-height: 1.2;\\n  height: 38px; \\n  transition: opacity 0.5s ease-in-out;\\n  opacity: 1; \\n\\n  \\n} */\\n\\n\\n.ship {\\n  /* border: 1px solid white; */\\n  /* box-shadow: 0 0 0 2px rgb(253, 253, 253); */\\n  background-color: blueviolet;\\n\\n\\n  /* width: 20px;\\n  height: 20px; */\\n}\\n\\n.carrier {\\n  background-color: deepskyblue;\\n}\\n\\n.battleship {\\n background-color: orange;\\n}\\n\\n.cruiser {\\n  background-color: blueviolet;\\n}\\n\\n.submarine {\\n  background-color: cornflowerblue;\\n}\\n\\n.destroyer {\\n  background-color: fuchsia;\\n}\\n\\n#carrier {\\n  width: 100px;\\n  height: 14px;\\n}\\n\\n#battleship {\\n  width: 80px;\\n  height: 14px;\\n}\\n\\n#cruiser {\\n  width: 60px;\\n  height: 14px;\\n}\\n\\n#submarine {\\n  width: 60px;\\n  height: 14px;\\n}\\n\\n#destroyer {\\n  width: 40px;\\n  height: 14px;\\n}\\n\\n.hit {\\n  background-color: rgb(0, 0, 0);\\n}\\n\\n.miss {\\n  background-color: gray;\\n}\\n\\n.hover-preview {\\n  background-color: hsla(288, 100%, 50%, 0.786); /* translucent violet overlay */\\n}\\n\\n.valid-hover {\\n  background-color: green;\\n}\\n\\n.invalid-hover {\\n  background-color: rgb(255, 0, 0);\\n}\\n\\n.random-placement-button, .start-game-button {\\n  width: 170px;\\n  height: 30px;\\n  padding: 3px 3px;\\n  background-color: black; /* Blue */\\n  color: white;\\n  border: 1px solid white;\\n  border-radius: 5px;\\n  font-size: 16px;\\n  cursor: pointer;\\n  transition: background-color 0.3s ease;\\n\\n}\\n\\n.random-placement-button {\\n  grid-row: 4 / 5;\\n  grid-column: 2 / 2;\\n}\\n\\n.start-game-button {\\n  grid-row: 6 / 7;\\n  grid-column: 2 / 2;\\n}\\n\\n.random-placement-button:hover, .start-game-button:hover {\\n  background-color: rgb(53, 52, 52);\\n}\\n\\n.random-placement-button:disabled, .start-game-button:disabled {\\n  opacity: 0.3;\\n}\\n\\n\\n/* Message element base styles */\\n.text-updates {\\n  position: absolute;\\n  width: 100%;\\n  text-align: center;\\n  opacity: 0;\\n  /* transform: translateY(0); */\\n  transition: \\n  opacity 0.5s ease-in-out,\\n  transform 0.5s ease-in-out;\\n  pointer-events: none; \\n}\\n\\n/* Only animate the bottom message */\\n.text-updates:nth-last-child(1) { \\n  bottom: 0;\\n  /* STARTS SLIGHTLY FROM THE BOTTOM */\\n  transform: translateY(7px);\\n  transition: \\n    opacity 0.5s ease-in-out,\\n    transform 0.5s ease-in-out;\\n  color: red;\\n}\\n\\n.text-updates:nth-last-child(2) { \\n\\n  top: 19px; \\n  transform: translateY(0); \\n}\\n\\n.text-updates:nth-last-child(3) { \\n  top: 0;  \\n}\\n\\n.text-updates.visible {\\n  opacity: 1;\\n  transform: translateY(0);\\n  /* color: red; */\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","import { Gameboard } from \"./gameboard\";\nimport { Ship } from \"./ship\";\n\nexport class Player  {\n  constructor () {\n    this.gameboard = new Gameboard();\n  }\n  placeShip(shipType, rowIndex, colIndex, direction, length) {\n    this.gameboard.placeShip(shipType, rowIndex, colIndex, direction, length);\n  }\n\n  setUpFleet() {\n    const ships = [\n      new Ship(5, 'carrier'),\n      new Ship(5, 'battleship'),\n      new Ship(5, 'cruiser'),\n      new Ship(5, 'submarine'),\n      new Ship(5, 'destroyer'),\n    ];\n\n    ships.forEach(shipType => {\n      let placed = false;\n      let attempts = 0;\n      const maxAttempts = 100;\n      // console.log(`Placing ${shipType.name}...`);\n      while (!placed && attempts < maxAttempts) {\n          const randomRow = Math.floor(Math.random() * 10);\n          const randomCol = Math.floor(Math.random() * 10);\n          const randomDir = Math.random() < 0.5 ? 'horizontal' : 'vertical';\n          placed = this.gameboard.placeShip(shipType, randomRow, randomCol, randomDir);\n          attempts++;\n      }\n      if (!placed) {\n          console.error(`Failed to place ${shipType.name} after ${attempts} attempts.`);\n      }\n    });\n  }\n  \n  computerAttack(player) {\n    while (true) {\n        const randomRow = Math.floor(Math.random() * 10);\n        const randomCol = Math.floor(Math.random() * 10);\n\n        const cellValue = player.gameboard.board[randomRow][randomCol];\n\n        if (cellValue !== 'hit' && cellValue !== 'miss') {\n            const result = player.gameboard.receiveAttack(randomRow, randomCol);\n            return result; // returns 'hit' or 'miss'\n        }\n    }\n  }\n\n}\n\n","import { Ship } from \"./ship\";\n\n\n// export const myPage = () => {\n//   const playerBoard = document.querySelector('.player1-board')\n//   const computerBoard = document.querySelector('.computer-board')\n//   const computerBoardEls = document.querySelectorAll('.computer-board .box');\n//   const player1BoardEls = document.querySelectorAll('.player1-board .box');\n//   const shipContainer = document.querySelector('.ship-container')\n//   const randomizeEl = document.querySelector('.randomize-button')\n//   const carrierEl = document.querySelector('.carrier');\n//   const battleshipEl = document.querySelector('.battleship');\n//   const cruiserEl = document.querySelector('.cruiser');\n//   const submarineEl = document.querySelector('.submarine');\n//   const destroyerEl = document.querySelector('.destroyer');\n\n//   return {playerBoard, computerBoard,computerBoardEls, player1BoardEls, shipContainer, randomizeEl, carrierEl, battleshipEl, cruiserEl, submarineEl, destroyerEl}\n// }\n\n\n// export const page = myPage();\n\n\nexport function makeElement(elementTag, className, appendToEl, textInside) {\n  const element = document.createElement(elementTag);\n  element.classList.add(className);\n  if (appendToEl) {\n    appendToEl.append(element);\n  }\n  if (textInside) {\n    element.innerText = textInside;\n  }\n  return element;\n}\n\nexport const drawPlayer1BoardInDOM = (player1, player1Board) => {\n  player1Board.innerHTML = ''; // clear before redrawing\n  // row => Go to the (first) array.\n  // rowindex => get the index \"of the array\" (the first row, the second row, etc)\n  // cell => go to the (first) row.\n  // colindex => get the (first) item in that position. \n  player1.gameboard.board.forEach((row, rowIndex) => {\n    row.forEach((cell, colIndex) => {\n      const element = makeElement('div', 'box');\n      element.dataset.coordinates = `${rowIndex},${colIndex}`;\n      element.dataset.row = rowIndex;\n      element.dataset.col = colIndex;\n      if (cell instanceof Ship && cell.name === 'carrier') {\n        element.classList.add('carrier'); // 🩶 show ships visually\n      }\n      if (cell instanceof Ship && cell.name === 'battleship') {\n        element.classList.add('battleship'); // 🩶 show ships visually\n      }\n      if (cell instanceof Ship && cell.name === 'cruiser') {\n        element.classList.add('cruiser'); // 🩶 show ships visually\n      }\n      if (cell instanceof Ship && cell.name === 'submarine') {\n        element.classList.add('submarine'); // 🩶 show ships visually\n      }\n      if (cell instanceof Ship && cell.name === 'destroyer') {\n        element.classList.add('destroyer'); // 🩶 show ships visually\n      }\n      // if (cell === 'hit') {\n      //   element.classList.add('hit');\n      // }\n      if (cell === 'miss') {\n        element.classList.add('miss');\n      }\n      if (\n        cell instanceof Ship &&\n        cell.hits.some(([r, c]) => r === rowIndex && c === colIndex)\n      ) {\n        element.classList.add('hit');\n      }\n      \n      player1Board.append(element);\n    });\n  });\n};\n\n\nexport const drawComputerBoardInDOM = (computer, computerBoard) => {\n  computerBoard.innerHTML = ''; // clear before redrawing\n  computer.gameboard.board.forEach((row, rowIndex) => {   // ✅ fixed here\n    row.forEach((cell, colIndex) => {                     // ✅ fixed here\n      const element = makeElement('div', 'box');\n      element.dataset.row = rowIndex;\n      element.dataset.col = colIndex;\n      if (cell instanceof Ship && cell.name === 'carrier') {\n        element.classList.add('carrier'); // 🩶 show ships visually\n      }\n      if (cell instanceof Ship && cell.name === 'battleship') {\n        element.classList.add('battleship'); // 🩶 show ships visually\n      }\n      if (cell instanceof Ship && cell.name === 'cruiser') {\n        element.classList.add('cruiser'); // 🩶 show ships visually\n      }\n      if (cell instanceof Ship && cell.name === 'submarine') {\n        element.classList.add('submarine'); // 🩶 show ships visually\n      }\n      if (cell instanceof Ship && cell.name === 'destroyer') {\n        element.classList.add('destroyer'); // 🩶 show ships visually\n      }\n      computerBoard.append(element);\n    });\n  });\n};\n\n\n// const box1 = makeElement('div', 'box', page.grid1)\n\n// export const box = makeElement('div', 'box', document.body, 'x');\n\n","\nimport { Player } from './Player';\nimport { Ship } from './ship';\nimport { explosion1, explosion2, miss } from './sounds';\nimport {\n  drawPlayer1BoardInDOM, drawComputerBoardInDOM, makeElement} from './cache-dom';\n\nconst availableShips = () => {\n  const carrier = new Ship(5, 'carrier');\n  const battleShip = new Ship(4, 'battleship');\n  const cruiser = new Ship(3, 'cruiser');\n  const submarine = new Ship(3, 'submarine');\n  const destroyer = new Ship(2, 'destroyer');\n  return [carrier, battleShip, cruiser, submarine, destroyer];\n}\n\nconst createPlayers = () => {\n  const player1 = new Player();\n  const computer = new Player();\n  return {player1, computer}\n}\n\nexport const initialize = () => {\n  const main = makeElement('div', 'main', document.body);\n  const headerEl = makeElement('h1', 'header-element', main, 'BattleShip');\n  const player1Board = makeElement('div', 'player1-board', main, 'player-1board');\n  const randomPlacementEl = makeElement('button', 'random-placement-button', main, 'randomize placement' )\n  const middleContainer = makeElement('div', 'middle-container', main)\n  const computerBoard = makeElement('div', 'computer-board', main);\n \n  const players = createPlayers();\n\n  const handleRandomization = createRandomizationHandler(player1Board, players);\n  main.addEventListener('click', handleRandomization);\n\n  players.player1.gameboard.drawBoard();\n  players.computer.gameboard.drawBoard();\n  \n  // SHIPTYPES IS AN ARRAY OF SHPS\n  const shipTypes = availableShips();\n\n    // Place computer ships randomly\n  players.player1.setUpFleet();\n  players.computer.setUpFleet();\n\n  // Draw boards visually\n  // console.log(players.player1);\n  // console.log(player1Board);\n  drawPlayer1BoardInDOM(players.player1, player1Board);\n  // drawComputerBoardInDOM(players.computer, computerBoard);\n\n  const gameState = {\n    isPlayerTurn: true,\n    gameOver: false,\n  };\n\n  // Using event delegation so I don't have to use removeeventlistener.\n  computerBoard.addEventListener('click', (e) => {\n    if (gameState.gameOver) return; // prevent any clicks after game ends\n\n    const cell = e.target.closest('.box');\n    if (!cell) return;\n    if (!gameState.isPlayerTurn) return;\n\n    const playerMissed = handlePlayerClick(e, players.player1, players.computer, player1Board, computerBoard, gameState, middleContainer);\n\n    if (playerMissed) {\n        isPlayerTurn = false;\n        // playSound(playerMissed);\n        setTimeout(() => {\n          console.log(\"middleContainer:\", middleContainer);\n            computerTurn(players.player1, players.computer, player1Board, computerBoard, gameState, middleContainer);\n            gameState.isPlayerTurn = true;\n        }, 500);\n    }\n});\nhandleStartGameClick(main, players, computerBoard);\n\n  return {player1: players.player1, computer: players.computer};\n}\n\nfunction handlePlayerClick(e, player1, computer, player1Board, computerBoard, gameState, middleContainer) {\n  const box = e.target;\n  const row = Number(box.dataset.row);\n  const col = Number(box.dataset.col);\n  const coordsHit = computer.gameboard.board[row][col];\n  // Prevent attacking same spot twice\n  if (\n    coordsHit === 'hit' ||\n    coordsHit === 'miss'\n  ) {\n    fadeText(middleContainer, 'Already attacked there. Try again.')\n    return;\n  }\n  \n  const result = computer.gameboard.receiveAttack(row, col);\n\n\n  if (result === 'already-attacked') {\n    fadeText(middleContainer, 'Already attacked there. Try again.')\n    return; // do nothing, don't switch turns\n  }\n  if (result === 'hit') {\n    checkIfShipSunk(computer, row, col, middleContainer);\n    box.classList.add('hit');\n    console.log('You hit! Go again.');\n    fadeText(middleContainer, 'It\\'s a hit! Your turn again.')\n    playSound(result, coordsHit);\n\n  } else {\n    box.classList.add('miss');\n    console.log(\"You missed! Computer's turn.\");\n    fadeText(middleContainer, 'You missed. It\\'s the computer\\'s turn.')\n    playSound(result);\n\n    // Check win condition after player turn\n    if (!computer.gameboard.countSunkShips()) {\n      console.log('You win!');\n    fadeText(middleContainer, '🏆 YOU WIN!! 🏆.')\n      return;\n    }\n\n    // Computer's turn\n    setTimeout(() => {\n      computerTurn(player1, computer, player1Board, computerBoard,  gameState,  middleContainer);\n    }, 1000);\n  }\n\n  // Check win condition after player hit\n  if (!computer.gameboard.countSunkShips()) {\n    fadeText(middleContainer, '🏆 YOU WIN!! 🏆.')\n    gameState.gameOver = true;\n    return false;\n  }\n}\n\nfunction computerTurn(player1, computer, player1Board, computerBoard, gameState, middleContainer) {\n  function attackLoop() {\n    if (gameState.gameOver) return;\n\n    const result = computer.computerAttack(player1);\n    drawPlayer1BoardInDOM(player1, player1Board);\n\n    if (!player1.gameboard.countSunkShips()) {\n      console.log('Computer wins!');\n      fadeText(middleContainer, 'Computer wins!');\n      gameState.gameOver = true;\n      return;\n    }\n\n    if (result === 'hit') {\n      console.log('Computer hit! Computer goes again.');\n      fadeText(middleContainer, \"Computer hit! It's the computer's turn.\");\n\n      // Wait before attacking again so the message is visible\n      setTimeout(attackLoop, 500);\n    } else {\n      console.log('Computer missed! Your turn.');\n      fadeText(middleContainer, \"Computer missed! It's your turn.\");\n      // Return control to the player\n    }\n  }\n  attackLoop();\n}\n\nconst createRandomizationHandler = (player1Board, players) => {\n  return (e) => {\n    if (e.target.matches('.random-placement-button')) {\n      players.player1.gameboard.drawBoard();\n      players.player1.setUpFleet();\n      drawPlayer1BoardInDOM(players.player1, player1Board);\n    }\n  };\n};\n\nconst handleStartGameClick = (main, players, computerBoard) => {\n  const startGameEl = makeElement('button', 'start-game-button', main, 'Start Game')\n  const randomizePlacementEl = document.querySelector('.random-placement-button');\n  startGameEl.addEventListener('click', (e) => {\n    if (e.target.matches('.start-game-button')) {\n      console.log('clicked');\n      randomizePlacementEl.disabled = true;\n      startGameEl.disabled = true;\n      drawComputerBoardInDOM(players.computer, computerBoard);\n    }\n  });\n}\n\nconst fadeText = (element, newText) => {\n  // Remove oldest message if we have 2 already\n  const messages = element.querySelectorAll('.text-updates');\n  if (messages.length >= 3) {\n    messages[0].remove();\n  }\n\n  // Create new message\n  const textEl = makeElement('div', 'text-updates', element);\n  textEl.textContent = newText;\n\n  // Trigger animation\n  void textEl.offsetWidth;\n  textEl.classList.toggle('visible');\n};\n\nconst checkIfShipSunk = (player, row, col, middleContainer) => {\n\tconst shipHit = player.gameboard.board[row][col];\n\tif (shipHit.isSunk === true) {\n    fadeText(middleContainer, 'Yey, you sank one!!')\n\t}\n}\n\nconst playSound = (result, coordsHit) => {\n  const missSound = new Audio(miss);\n  const explosion1Sound = new Audio(explosion1);\n  const explosion2Sound = new Audio(explosion2);\n  if (result === 'miss') {\n    missSound.play();\n  }\n  if (result === 'hit') {\n    explosion1Sound.play();\n  }\n  if (coordsHit instanceof Ship && coordsHit.isSunk === true) {\n    explosion2Sound.play();\n  }\n}\n\n// const playSunkShipSound = (coordsHit) {\n//   if (coordsHit instanceof Ship && coordsHit.isSunk === true) {\n    \n//   }\n// }\n// *****************\n// MAKE SURE ALL MESSAGES ARE DISPLAYED (WINNING, LOSING MSGS, ETC)\n// DISABLE THE BUTTON AFTER THE GAME STARTS.\n// ****************\n// const fadeText = (element, newText) => {\n//   const textEl = makeElement('div', 'text-updates', element);\n\n//   textEl.append(newText, document.createElement('br'));\n\n//   // Trigger fade in on the next frame\n// // Force reflow\n// void textEl.offsetWidth;\n// textEl.style.opacity = '1';\n\n// };\n\n// const fadeText = (element, newText) => {\n//   // Fade out\n//   const textEl = makeElement('span', '.text-updates', element);\n//   textEl.style.opacity = '0';\n//   // Wait for fade out to complete (500ms matches our CSS transition)\n//   setTimeout(() => {\n//     // Change text when invisible\n//     // element.innerText = newText;\n//     // element.append(textEl);\n//     textEl.append(newText, document.createElement('br'));\n    \n//     // Fade back in\n//     textEl.style.opacity = '1';\n//   }, 500);\n// };\n// function addComputerBoardListeners(player1, computer, player1Board, computerBoard) {\n//   const computerBoardEls = document.querySelectorAll('.computer-board .box');\n//   computerBoardEls.forEach((cell) => {\n//     // Create a named wrapper and store it on the cell\n//     cell._handlePlayerClick = (e) => handlePlayerClick(e, player1, computer, player1Board, computerBoard);\n//     cell.addEventListener('click', cell._handlePlayerClick);\n//   });\n// }\n\n// function removeComputerBoardListeners() {\n//   const computerBoardEls = document.querySelectorAll('.computer-board .box');\n//   computerBoardEls.forEach((cell) => {\n//     if (cell._handlePlayerClick) {\n//       cell.removeEventListener('click', cell._handlePlayerClick);\n//       delete cell._handlePlayerClick; // optional cleanup\n//     }\n//   });\n// }\n\n\n\n//   const initApp = () => {\n//     // IMPORTANT: Get your cached DOM elements here, as they should be ready now\n//     const page = getPageElements();\n\n//     // Ensure elements are available before proceeding\n//     if (!page) {\n//         console.error(\"Application initialization failed: DOM elements not ready.\");\n//         return;\n//     }\n\n//     console.log(\"App initialized! Page elements ready for use.\");\n//     console.log(\"Example access:\", page.computerBoardEls);\n\n//     // 3. Set up your main event listeners and initial game state\n//     // You'll move the DOM-related code from your index.js and controller.js DOMContentLoaded blocks here.\n\n//     // Example: Attaching the computer board click listener\n//     if (page.computerBoardEls) {\n//         page.computerBoardEls.forEach((cell) => {\n//             // Make sure handlePlayerClick is defined or imported in this scope\n//             cell.addEventListener('click', handlePlayerClick);\n//         });\n//     }\n\n//     // Example: Attaching the randomize button listener\n//     if (page.randomizeEl) {\n//         page.randomizeEl.addEventListener('click', randomizePlayer1Board);\n//     }\n\n//     // 4. Call your main game control logic to start the game flow\n//     controlTurns(); // Assuming this function starts the turn-based gameplay\n\n//     // You might also have initial setup functions here, e.g.:\n//     // setupPlayerBoards(page); // Pass page elements if needed\n// };\n\n// // 5. Export this single initialization function\n// export { initApp };\n    // ===========================\n    // THIS CODE WORKS UP TO THE POINT OF PLACING THE SHIPS;\n    // ========================\n\n//   const availableShips = () => {\n//   const carrier = new Ship(5, 'carrier');\n//   const battleShip = new Ship(4, 'battleship');\n//   const cruiser = new Ship(3, 'cruiser');\n//   const submarine = new Ship(3, 'submarine');\n//   const destroyer = new Ship(2, 'destroyer');\n//   return [carrier, battleShip, cruiser, submarine, destroyer];\n// }\n\n// // SHIPTYPES IS AN ARRAY OF SHPS\n// const shipTypes = availableShips();\n\n\n// let currentOrientation = 'vertical';\n// let shipSelectedByUser = 'battleship';\n// export const controlTurns = () => {\n//   const player1 = new Player();\n//   const computer = new Player();\n\n\n\n//   // Draw logical boards\n//   player1.gameboard.drawBoard();\n//   computer.gameboard.drawBoard();\n\n//   // RANDOM PLACEMENT OF SHIPS FOR PLAYER1\n//   shipTypes.forEach((shipType) => {\n//     let placed = false;\n//     while (!placed) {\n//       const randomRow = Math.floor(Math.random() * 10);\n//       const randomCol = Math.floor(Math.random() * 10);\n//       const randomDir = Math.random() < 0.5 ? 'horizontal' : 'vertical';\n//       placed = player1.gameboard.placeShip(shipType, randomRow, randomCol, randomDir);\n//     }\n//   });\n\n//   // Place computer ships randomly\n//   computer.setUpFleet();\n\n//   // Draw boards visually\n//   drawPlayer1BoardInDOM(player1);\n//   drawComputerBoardInDOM(computer);\n\n//   // Had to add this here because they evaluate as undefined.\n//   page.computerBoardEls = document.querySelectorAll('.computer-board .box');\n//   page.player1BoardEls = document.querySelectorAll('.player1-board .box');\n\n//           // REMOVED THESE LINES:\n//   // addComputerBoardListeners();\n\n//   // const foundShipName = shipTypes.find(ship => ship.name === shipSelectedByUser);\n//   // addHoverPlacementListeners(foundShipName, currentOrientation);\n//         // REPLACED THEM WITH THIS NEXT LINE:\n//   placePlayer1ShipsManually();\n\n//   // ---- Local Functions ---- //\n\n//   function handlePlayerClick(e) {\n//     const box = e.target;\n//     const row = Number(box.dataset.row);\n//     const col = Number(box.dataset.col);\n\n//     // Prevent attacking same spot twice\n//     if (\n//       computer.gameboard.board[row][col] === 'hit' ||\n//       computer.gameboard.board[row][col] === 'miss'\n//     ) {\n//       console.log('Already attacked here.');\n//       return;\n//     }\n\n//     const result = computer.gameboard.receiveAttack(row, col);\n//     if (result === 'hit') {\n//       box.classList.add('hit');\n//       console.log('You hit! Go again.');\n//     } else {\n//       box.classList.add('miss');\n//       console.log(\"You missed! Computer's turn.\");\n\n//       // Check win condition after player turn\n//       if (!computer.gameboard.countSunkShips()) {\n//         console.log('You win!');\n//         removeComputerBoardListeners();\n//         return;\n//       }\n\n//       // Computer's turn\n//       setTimeout(() => {\n//         computerTurn();\n//       }, 500);\n//     }\n\n//     // Check win condition after player hit\n//     if (!computer.gameboard.countSunkShips()) {\n//       console.log('You win!');\n//       removeComputerBoardListeners();\n//       return;\n//     }\n//   }\n\n//   function computerTurn() {\n//     let result;\n//     do {\n//       result = computer.computerAttack(player1);\n//       drawPlayer1BoardInDOM(player1);\n\n//       if (!player1.gameboard.countSunkShips()) {\n//         console.log('Computer wins!');\n//         removeComputerBoardListeners();\n//         return;\n//       }\n\n//       if (result === 'hit') {\n//         console.log('Computer hit! Computer goes again.');\n//       } else {\n//         console.log('Computer missed! Your turn.');\n//       }\n//     } while (result === 'hit');\n//   }\n\n//   function addComputerBoardListeners() {\n//     page.computerBoardEls.forEach((cell) => {\n//       cell.addEventListener('click', handlePlayerClick);\n//     });\n//   }\n\n//   function removeComputerBoardListeners() {\n//     page.computerBoardEls.forEach((cell) => {\n//       cell.removeEventListener('click', handlePlayerClick);\n//     });\n//   }\n\n//   function addHoverPlacementListeners(ship, orientation, onPlacedCallback) {\n//     function handleMouseEnter(e) {\n//       const row = Number(e.target.dataset.row);\n//       const col = Number(e.target.dataset.col);\n//       const hoverCoords = player1.gameboard.getPotentialShipCoordinates(\n//         ship.length,\n//         row,\n//         col,\n//         orientation\n//       );\n//       if (!hoverCoords) return; // out of bounds\n  \n//       const isValid = hoverCoords.every(([r, c]) => player1.gameboard.board[r][c] === null);\n  \n//       hoverCoords.forEach(([r, c]) => {\n//         const cell = document.querySelector(`[data-row=\"${r}\"][data-col=\"${c}\"]`);\n//         if (cell) {\n//           cell.classList.add(isValid ? 'valid-hover' : 'invalid-hover');\n//         }\n//       });\n//     }\n  \n//     function handleMouseLeave() {\n//       document.querySelectorAll('.valid-hover, .invalid-hover').forEach(cell => {\n//         cell.classList.remove('valid-hover', 'invalid-hover');\n//       });\n//     }\n  \n//     function handlePlacementClick(e) {\n//       const row = Number(e.target.dataset.row);\n//       const col = Number(e.target.dataset.col);\n//       const hoverCoords = player1.gameboard.getPotentialShipCoordinates(\n//         ship.length,\n//         row,\n//         col,\n//         orientation\n//       );\n//       if (!hoverCoords) return;\n  \n//       const isValid = hoverCoords.every(([r, c]) => player1.gameboard.board[r][c] === null);\n//       if (!isValid) {\n//         console.log('Invalid placement.');\n//         return;\n//       }\n  \n//       // Place ship in logical board\n//       player1.gameboard.placeShip(ship, row, col, orientation, ship.length);\n  \n//       // Update DOM\n//       drawPlayer1BoardInDOM(player1);\n  \n//       // Remove hover and click listeners to prevent duplicate placement\n//       page.player1BoardEls.forEach(cell => {\n//         cell.removeEventListener('mouseenter', handleMouseEnter);\n//         cell.removeEventListener('mouseleave', handleMouseLeave);\n//         cell.removeEventListener('click', handlePlacementClick);\n//       });\n\n//       if (onPlacedCallback) {\n//         onPlacedCallback();\n//       }\n      \n//       console.log(`${ship.name} placed. Game starts now.`);\n//       addComputerBoardListeners(); // Start gameplay\n//     }\n  \n//     page.player1BoardEls.forEach(cell => {\n//       cell.addEventListener('mouseenter', handleMouseEnter);\n//       cell.addEventListener('mouseleave', handleMouseLeave);\n//       cell.addEventListener('click', handlePlacementClick);\n//     });\n//   }\n  \n//   function placePlayer1ShipsManually() {\n//     let currentShipIndex = 0;\n//     const orientations = ['horizontal', 'vertical']; // or your toggle logic\n//     let currentOrientation = orientations[0];        // adjust if needed\n  \n//     function placeNextShip() {\n//       if (currentShipIndex >= shipTypes.length) {\n//         console.log('✅ All ships placed! Starting the game.');\n//         addComputerBoardListeners();\n//         return;\n//       }\n  \n//       const currentShip = shipTypes[currentShipIndex];\n//       console.log(`Place your ${currentShip.name}`);\n  \n//       addHoverPlacementListeners(currentShip, currentOrientation, () => {\n//         currentShipIndex++;\n//         placeNextShip();\n//       });\n//     }\n  \n//     placeNextShip();\n//   }\n  \n\n\n\n// };\n\n// // BUTTON TO RANDOMIZE THE BOARD\n// const randomizePlayer1Board = () =>{\n//   controlTurns();\n// }\n// page.randomizeEl.addEventListener('click', randomizePlayer1Board)\n\n      // ==========================\n      // END OF WORKING CODE THAT I DISABLED IN ORDER TO REFACTOR\n      // ==========================\n\n\n\n\n//  **********************\n//  CODE GEMINI GAVE ME TO HAVE ONLY ONE FUNCTION CALL IN THE APP:\n//  ***********************\n// src/app.js (or src/game.js, src/main.js - choose a descriptive name)\n\n// // 1. Import all the modules you need for your application\n// import { getPageElements } from './cache-dom.js'; // To get your DOM elements\n// import { controlTurns } from './controller.js';   // Your main game controller logic\n// // import { setupPlayerBoards } from './boardSetup.js'; // Example: if you have a function for initial board setup\n// // import { handlePlayerClick } from './controller.js'; // If you want to attach specific handlers here\n// // import { randomizePlayer1Board } from './controller.js'; // If you want to attach specific handlers here\n\n// // 2. Define the single function that will initialize your entire application\n// const initApp = () => {\n//     // IMPORTANT: Get your cached DOM elements here, as they should be ready now\n//     const page = getPageElements();\n\n//     // Ensure elements are available before proceeding\n//     if (!page) {\n//         console.error(\"Application initialization failed: DOM elements not ready.\");\n//         return;\n//     }\n\n//     console.log(\"App initialized! Page elements ready for use.\");\n//     console.log(\"Example access:\", page.computerBoardEls);\n\n//     // 3. Set up your main event listeners and initial game state\n//     // You'll move the DOM-related code from your index.js and controller.js DOMContentLoaded blocks here.\n\n//     // Example: Attaching the computer board click listener\n//     if (page.computerBoardEls) {\n//         page.computerBoardEls.forEach((cell) => {\n//             // Make sure handlePlayerClick is defined or imported in this scope\n//             cell.addEventListener('click', handlePlayerClick);\n//         });\n//     }\n\n//     // Example: Attaching the randomize button listener\n//     if (page.randomizeEl) {\n//         page.randomizeEl.addEventListener('click', randomizePlayer1Board);\n//     }\n\n//     // 4. Call your main game control logic to start the game flow\n//     controlTurns(); // Assuming this function starts the turn-based gameplay\n\n//     // You might also have initial setup functions here, e.g.:\n//     // setupPlayerBoards(page); // Pass page elements if needed\n// };\n\n// // 5. Export this single initialization function\n// export { initApp };\n//           ================\n//             END OF GEMINI CODE\n//           ===============\n\n\n\n// const getShipInfo = () => {\n//   const ships = {};\n//   shipTypes.forEach(shipType => {\n//     ships[shipType.name] = {\n//       name: shipType.name,\n//       length: shipType.length,\n//       orientation: currentOrientation\n//     }\n  \n//   })\n// return ships;\n// }\n// const shipDataToHover = getShipInfo();\n// console.log(shipDataToHover);\n\n\n\n// export const controlTurns = () => {\n//   const player1 = new Player();\n//   const computer = new Player();\n\n//   player1.gameboard.drawBoard();\n//   computer.gameboard.drawBoard();\n\n//   // Place ships for player1\n//   // const carrier = new Ship(5, 'carrier');\n//   // const battleShip = new Ship(4, 'battleship');\n//   // const cruiser = new Ship(3, 'cruiser');\n//   // const submarine = new Ship(3, 'submarine');\n//   // const destroyer = new Ship(2, 'destroyer');\n\n//   // const shipTypes = {\n//   //   carrier: carrier,\n//   //   battleship: battleShip,\n//   //   cruiser: cruiser,\n//   //   submarine: submarine,\n//   //   destroyer: destroyer,\n//   // };\n\n//   // player1.placeShip(new Ship(5), 0, 0, 'vertical', 5);\n//   // player1.placeShip(new Ship(4), 0, 1, 'vertical', 4);\n//   // player1.placeShip(new Ship(3), 0, 2, 'vertical', 3);\n//   // player1.placeShip(new Ship(3), 0, 3, 'vertical', 3);\n//   // player1.placeShip(new Ship(2), 0, 4, 'vertical', 2);\n//   // const shipTypes = [\n//   //   carrier,\n//   //   battleShip,\n//   //   cruiser,\n//   //   submarine,\n//   //   destroyer,\n//   // ];\n//   shipTypes.forEach((shipType) => {\n//     let placed = false;\n\n//     while (!placed) {\n//       const randomRow = Math.floor(Math.random() * 10);\n//       const randomCol = Math.floor(Math.random() * 10);\n//       const randomDir = Math.random() < 0.5 ? 'horizontal' : 'vertical';\n\n//       // Attempt to place the ship\n//       placed = player1.gameboard.placeShip(\n//         shipType,\n//         randomRow,\n//         randomCol,\n//         randomDir\n//       );\n//       // console.log(`Attempting to place: ${shipType.length}`);\n//     }\n//   });\n//   // Place ships for computer\n//   computer.setUpFleet();\n\n//   drawPlayer1BoardInDOM(player1);\n//   drawComputerBoardInDOM(computer);\n//   page.computerBoardEls = document.querySelectorAll('.computer-board .box');\n//   console.log(page.computerBoardEls);\n//   const handlePlayerClick = (e) => {\n//     const box = e.target;\n//     const row = Number(box.dataset.row);\n//     const col = Number(box.dataset.col);\n\n//     if (computer.gameboard.board[row][col] === 'hit')\n//       if (\n//         computer.gameboard.board[row][col] === 'hit' ||\n//         computer.gameboard.board[row][col] === 'miss'\n//       ) {\n//         console.log('Already attacked here.');\n//         return;\n//       }\n\n//     const result = computer.gameboard.receiveAttack(row, col);\n//     if (result === 'hit') {\n//       box.classList.add('hit');\n//       console.log('You hit! Go again.');\n//     } else {\n//       box.classList.add('miss');\n//       console.log(\"You missed! Computer's turn.\");\n\n//       // Check win condition after player turn\n//       if (!computer.gameboard.countSunkShips()) {\n//         console.log('You win!');\n//         removeListeners();\n//         return;\n//       }\n\n//       // Computer's turn\n//       setTimeout(() => {\n//         computerTurn();\n//       }, 500);\n//     }\n\n//     // Check win condition after player hit\n//     if (!computer.gameboard.countSunkShips()) {\n//       console.log('You win!');\n//       removeListeners();\n//       return;\n//     }\n//   };\n\n//   const computerTurn = () => {\n//     let result;\n//     do {\n//       result = computer.computerAttack(player1);\n//       drawPlayer1BoardInDOM(player1);\n\n//       if (!player1.gameboard.countSunkShips()) {\n//         console.log('Computer wins!');\n//         removeListeners();\n//         return;\n//       }\n\n//       if (result === 'hit') {\n//         console.log('Computer hit! Computer goes again.');\n//       } else {\n//         console.log('Computer missed! Your turn.');\n//       }\n//     } while (result === 'hit');\n//   };\n\n//   const removeListeners = () => {\n//     computerCells.forEach((box) => {\n//       box.removeEventListener('click', handlePlayerClick);\n//     });\n//   };\n\n\n//   // const ships = document.querySelectorAll('.ship-section .ship');\n//   // const handleDragstart = (e) => {\n//   //   e.dataTransfer.setData('text/plain', e.target.id);\n//   // }\n//   // ships.forEach((ship) => {\n//   //   ship.addEventListener('dragstart', handleDragstart);\n//   // });\n\n//   // // DRAG AND ROP FOR PLAYER1 SHIPS\n  \n//   // const player1Cells = document.querySelectorAll('.player1-board .box');\n//   // player1Cells.forEach((cell) => {\n//   //   cell.addEventListener('dragover', (e) => {\n//   //     e.preventDefault();\n//   //   });\n\n//   //   cell.addEventListener('drop', (e) => {\n//   //     e.preventDefault();\n//   //     const player1ShipID = e.dataTransfer.getData('text/plain');\n//   //     console.log(player1ShipID);\n//   //     console.log('dropped',player1ShipID,'on cell:',cell.dataset.coordinates );\n//   //     const shipEl = document.getElementById(player1ShipID);\n//   //     const ship = shipTypes[player1ShipID];\n//   //     console.log(ship);\n//   //     const length = ship.length;\n//   //     let direction = 'vertical';\n//   //     console.log('direction', direction);\n//   //     const rowIndex = Number(cell.dataset.coordinates[0]);\n//   //     const colIndex = Number(cell.dataset.coordinates[2]);\n//   //     if (\n//   //       player1.gameboard.placeShip(\n//   //         ship,\n//   //         rowIndex,\n//   //         colIndex,\n//   //         direction,\n//   //         ship.length\n//   //       )\n//   //     ) {\n//   //           // cell.append(shipEl); // instead of appending, I changed the class name so it would look better in the DOM.\n//   //       cell.classList.add('ship');\n//   //       shipEl.parentElement.removeChild(shipEl);\n\n//   //       shipEl.removeAttribute('draggable'); // removes dragged ships from the ship container.\n//   //       shipEl.removeEventListener('dragstart', handleDragstart);\n//   //     }\n//   //     const shipCoordinates = player1.gameboard.getShipCoordinates(ship);\n//   //     console.log(shipCoordinates);\n\n//   //     shipCoordinates.forEach((item) => {\n//   //       let row = item[0];\n//   //       let col = item[1];\n//   //       let shipElements = document.querySelector(\n//   //         `[data-row=\"${row}\"][data-col=\"${col}\"]`\n//   //       );\n//   //       shipElements.classList.add('ship');\n//   //     });\n\n//   //     console.log(JSON.stringify(shipCoordinates));\n\n//   //     console.log(player1.gameboard.board);\n//   //   });\n//   // });\n//   // //END OF DRAG AND ROP FOR PLAYER1 SHIPS\n\n\n//   const computerCells = document.querySelectorAll('.computer-board .box');\n//   computerCells.forEach((cell) => {\n//     cell.addEventListener('click', handlePlayerClick);\n//   });\n\n\n\n\n// };\n\n","\nimport { Ship } from \"./ship\";\n\nexport class Gameboard {\n  constructor() {\n    this.board = []; // this is your container for 10 rows\n    this.numberofShips = 0;\n    this.placedShips = [];\n  }\n\n  drawBoard() {\n    this.board = [];\n    for (let i = 0; i < 10; i++) {\n        this.board.push(Array(10).fill(null));\n    }\n}\n\n  checkForShips(shipType, rowIndex, colIndex, direction) {\n    for (let i = 0; i < shipType.length; i++) {\n        if (direction === 'horizontal') {\n            if (colIndex + i >= 10) return true; // out of bounds\n            if (this.board[rowIndex][colIndex + i] !== null) return true; // overlap\n        } else if (direction === 'vertical') {\n            if (rowIndex + i >= 10) return true; // out of bounds\n            if (this.board[rowIndex + i][colIndex] !== null) return true; // overlap\n        }\n    }\n    return false;\n}\n\n  placeShip(shipType, rowIndex, colIndex, direction) {\n    // Ensure ship fits within board\n    if (direction === 'horizontal' && colIndex + shipType.length > 10) return false;\n    if (direction === 'vertical' && rowIndex + shipType.length > 10) return false;\n\n    // Ensure no overlap\n    if (this.checkForShips(shipType, rowIndex, colIndex, direction)) return false;\n\n    // Place the ship\n    for (let i = 0; i < shipType.length; i++) {\n        if (direction === 'horizontal') {\n            this.board[rowIndex][colIndex + i] = shipType;\n        } else if (direction === 'vertical') {\n            this.board[rowIndex + i][colIndex] = shipType;\n        }\n    }\n    this.placedShips.push(shipType);\n    return true;\n}\n\n  receiveAttack(rowIndex, colIndex) {\n    let currentCell = this.board[rowIndex][colIndex];\n    // Check if the cell has already been attacked\n    if (\n      currentCell === 'miss' ||\n      (currentCell instanceof Ship && currentCell.hits.some(([r, c]) => r === rowIndex && c === colIndex))\n    ) {\n      console.log('Cell has already been attacked.');\n      return 'already-attacked';\n    }\n\n    // If it's a Ship\n    if (currentCell instanceof Ship) {\n      currentCell.increaseNumberOfHits(rowIndex, colIndex);\n      currentCell.determineIfSunk();\n      return 'hit';\n    } else {\n      this.board[rowIndex][colIndex] = 'miss'; // Mark as miss\n      return 'miss';\n    }\n  }\n\n  \n\n\n  // receiveAttack(rowIndex, colIndex) {\n  //   let currentCell = this.board[rowIndex][colIndex];\n\n  //   // Check if the cell has already been hit\n  //   if (currentCell === 'hit' || currentCell === 'miss') {\n  //       console.log('Cell has already been attacked.');\n  //       return 'already-attacked';  // or handle appropriately\n  //   }\n    \n  //   // Check if it is a Ship\n  //   if (currentCell instanceof Ship) {\n  //       currentCell.increaseNumberOfHits();\n  //       currentCell.determineIfSunk();\n  //       this.board[rowIndex][colIndex] = 'hit'; // Mark as hit\n  //       return 'hit';\n  //   } else {\n  //       this.board[rowIndex][colIndex] = 'miss'; // Mark as miss\n  //       return 'miss';\n  //   }\n  // }\n\n  countSunkShips() {\n    let count = 0;\n    this.placedShips.forEach((ship) => {\n      if (ship.isSunk === true) {\n        count++\n        // console.log(count);\n      }\n    })\n    if (count === 5) {\n      return false;\n    } else return true;\n  }\n\n  checkNumberOfShipsPlaced() {\n    if (this.placedShips.length >= 5) {\n      return false;\n    } else \n    return true;\n  }\n\n  getShipCoordinates(ship) {\n    const coordinates = []\n    this.board.forEach((row, rowIndex) => {\n      row.forEach((col, colIndex) => {\n        if (col === ship) {\n          coordinates.push([rowIndex, colIndex])\n        }\n      })\n    })\n    return coordinates;\n  }\n\n  // getShipCoordinates(ship) {\n  //   const coordinates = []\n  //   this.board.forEach((row, rowIndex) => {\n  //     row.forEach((col, colIndex) => {\n  //       if (col === ship) {\n  //         coordinates.push([rowIndex, colIndex])\n  //       }\n  //     })\n  //   })\n  //   return coordinates;\n  // }\n\n  getPotentialShipCoordinates(length, startRow, startCol, orientation) {\n    const coordinates = [];\n    for (let i = 0; i < length; i++) {\n      let row = startRow;\n      let col = startCol;\n      if (orientation === 'horizontal') col += i;\n      else row += i;\n  \n      // Check boundaries\n      if (row >= 10 || col >= 10) return null; \n  \n      coordinates.push([row, col]);\n    }\n    return coordinates;\n  }\n  \n  // removeShip(ship) {\n  //   this.board.forEach((row, rowindex) => {\n  //     row.forEach((col, colIndex) => {\n  //       if (col === ship) {\n  //         col = null;\n  //       }\n  //     })\n  //   })\n  // }\n\n  printBoard() {\n    let visual = '';\n    for (let row = 0; row < 10; row++) {\n      for (let col = 0; col < 10; col++) {\n        const cell = this.board[row][col];\n        if (cell instanceof Ship) {\n          visual += 'S ';\n        } else if (cell === 'hit') {\n          visual += 'H ';\n        } else if (cell === 'miss') {\n          visual += 'M ';\n        } else {\n          visual += '. ';\n        }\n      }\n      visual += '\\n';\n    }\n    // console.log(visual);\n  }\n  \n}","export class Ship {\n  constructor(length, name) {\n    this.length = length;\n    this.numberOfHits = 0;\n    this.isSunk = false;\n    this.name = name;\n    this.hits = [];\n  }\n  increaseNumberOfHits(row, col) {\n    this.numberOfHits++\n    this.hits.push([row, col]);\n  }\n\n  determineIfSunk() {\n    if (this.numberOfHits === this.length) {\n      this.isSunk = true;\n      console.log('ship sunk');\n    }\n  }\n}","import explosion1 from './sounds/explosion1.mp3';\nimport explosion2 from './sounds/explosion2.mp3';\nimport miss from './sounds/miss.mp3';\n\nexport { explosion1, explosion2, miss };\n","\n      var API = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n      var domAPI = require(\"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n      var insertFn = require(\"!../node_modules/style-loader/dist/runtime/insertBySelector.js\");\n      var setAttributes = require(\"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n      var insertStyleElement = require(\"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n      var styleTagTransformFn = require(\"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n      var content = require(\"!!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./style.css\");\n      \n      content = content.__esModule ? content.default : content;\n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nmodule.exports = content && content.locals || {};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.nc = undefined;","import './style.css';\n\nimport { initialize } from './controller';\nconsole.log(\"testt\");\n\n\ninitialize();\n\n\n// const gameboard1 = new Gameboard();\n// gameboard1.drawBoard();\n// const aircraftCarrier = new Ship(5);\n// const battleShip = new Ship(4);\n// const cruiser = new Ship(3);\n// const submarine = new Ship(3);\n// const destroyer = new Ship(2);\n\n// gameboard1.placeShip(aircraftCarrier, 0, 0, 'vertical', aircraftCarrier.length);\n// gameboard1.placeShip(battleShip, 0, 1, 'vertical', battleShip.length);\n// gameboard1.placeShip(cruiser, 0, 1, 'vertical', cruiser.length);\n// gameboard1.placeShip(submarine, 0, 1, 'vertical', submarine.length);\n// gameboard1.placeShip(destroyer, 0, 1, 'vertical', destroyer.length);\n// gameboard1.receiveAttack(0,0);\n\n\n// const player1 = new Player();\n// const computer = new Player();\n\n// player1.gameboard.drawBoard();\n// player1.setUpFleet();\n// console.log(player1.gameboard);\n// player1.placeShip(aircraftCarrier, 0, 0, 'vertical', aircraftCarrier.length);\n// console.log(JSON.stringify(player1.gameboard.board));"],"names":[],"sourceRoot":""}